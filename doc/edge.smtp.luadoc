
--- Module that manages an edge listener for SMTP message requests.
--  @see <a href="http://ratchet.icgood.net/api/latest/modules/ratchet.smtp.server.html">ratchet.smtp.server</a>
module "slimta.edge.smtp"

--- Creates a new SMTP edge listener. The socket should already be opened in
--  listening mode, and the bus is used to send received messages as requests.
--  @param socket listening socket.
--  @param bus bus to send requests on.
--  @return a new smtp edge object.
function slimta.edge.smtp.new(socket, bus)

--- Sets the code and message first received by clients when they connect to the
--  SMTP listener. Currently, this banner is static and cannot react dynamically
--  to the IP of the connecting client.
--  @param self the smtp edge object.
--  @param code the SMTP reply code to send with the banner, usually "220".
--  @param message the banner message. This message should start with the
--                 server's hostname and the string "ESMTP", e.g.
--                 "slimta.org ESMTP Mail Gateway".
function slimta.edge.smtp.set_banner_message(self, code, message)

--- Instantiates a policy that the SMTP server will not accept messages over the
--  size limit, and that clients may announce the message size before sending.
--  This uses the SIZE extension of ESMTP described in RFC 1870.
--  @param self the smtp edge object.
--  @param size the maximum allowed message size.
function slimta.edge.smtp.set_max_message_size(self, size)

--- Turns on TLS support in the SMTP server using the given context. This is
--  implemented using the STARTTLS extension of ESMTP described in RFC 2487.
--  @param self the smtp edge object.
--  @param context the ratchet.ssl context object.
--  @param immediately if true, expect clients to encrypt the entire session
--                     immediately rather than using STARTTLS. This is usually
--                     done on port 465 rather than 25, but was made obsolete
--                     by STARTTLS.
--  @see <a href="http://ratchet.icgood.net/api/latest/modules/ratchet.ssl.html">ratchet.ssl</a>
function slimta.edge.smtp.enable_tls(self, context, immediately)

--- Sets a validator function for an SMTP command. This allows for policies that
--  happen before receipt of message data, e.g. rejecting an address in the RCPT
--  command. Please see the examples and usage manual for information on how to
--  effectively use these.
--  @param self the smtp edge object.
--  @param command the simple command name, e.g. "MAIL" or "RCPT".
--  @param func the function to validate with. This function is passed a
--              session table, reply table, and anything extra on a per-command
--              basis, such as a recipient address or EHLO string.
function slimta.edge.smtp.set_validator(self, command, func)

--- Enables the authentication extension for the SMTP server. Once a session has
--  been authenticated, the "authed" key will be true in the session argument
--  passed to validators.
--  @param the smtp edge object.
--  @param a slimta.edge.smtp.auth object for managing authentication.
--  @see slimta.edge.smtp.auth
function slimta.edge.smtp.enable_authentication(self, auth)

--- Waits for a new socket connection.
--  @param self the smtp edge object.
--  @return a callable object that handles the entire connection transaction and
--          sends the message as a request to the bus. Usually, this is called
--          in a new thread so that accept() can be called again immediately.
function slimta.edge.smtp.accept(self)

--- Closes the SMTP edge listener socket.
--  @param self the smtp edge object.
function slimta.edge.smtp.close(self)

-- vim:filetype=lua:sw=4:ts=4:sts=4:et:
