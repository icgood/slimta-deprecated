
--- Module that provides an interface to XML parsing using libexpat. This module
--  does nothing fancy but functions very similar to using expat in C.
module "slimta.xml"

--- Escapes a string of data for XML usage, replacing all angle-brackets and
--  ampersands with the XML equivalents and returning a copy of the result.
--  @param data string of data to escape.
--  @return string of data suitable for inclusing in XML.
function escape(data)

--- Creates a new parser state. Data is then passed to this state with parse()
--  or parsesome() to actually parse the XML and run the callbacks.
--  @param state a value that is passed as the first parameter to each callback.
--  @param start_cb called for each start tag. Arguments are the state, the tag
--                  name, and a table of attributes.
--  @param end_cb called for each end tag. Arguments are the state and the tag
--                name.
--  @param data_cb called for each piece of tag data. This callback may be
--                 called more than once per tag.
--  @return a new xml parser object.
function new(state, start_cb, end_cb, data_cb)

--- Parses a string of XML data so that the callbacks given in the parser
--  constructor are called.
--  @param self the xml parser object.
--  @param data the string of data to parse.
--  @param more_coming true if this is not the last piece of data in the chunk.
function parse(self, data, more_coming)

--- Calls parse() with more_coming set to true.
--  @param self the xml parser object.
--  @param data a piece of the string of data to parse.
function parsesome(self, data)

-- vim:filetype=lua:sw=4:ts=4:sts=4:et:
