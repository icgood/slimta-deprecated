
--- Module for static routing logic for messages. This function is ideal for
--  inbound mail traffic where all messages follow the same routing rules.
module("slimta.routing.static")

--- Creates a new static routing object. The parameters define the relaying
--  information applied to each routed message. Generally, this information
--  is static (i.e. a string or a number), but each parameter can also be
--  given as a function which will be called in route() with the message as
--  the only parameter.
--  @param relayer the relayer to use for routing messages.
--  @param host the host to use for routing messages.
--  @param port the port to use for routing messages, default 25.
--  @return a new routing.static object.
function new(relayer, host, port)

--- Applies the static routing information to the messages envelope. If any
--  piece of the routing information was given as a function, that function is
--  called with the message as the only parameter and the result is used.
--  @param self the routing.static object.
--  @param message the message to apply routing information to.
--  @return an array containing one element, the original message, for
--          compatibility with other routing types.
function route(self, message)

--- Implements static routing logic as a filter function for a bus chain. The
--  route() method is called for each received message in the request.
--  @param self the routing.static object.
--  @param from_bus the "from" bus.
--  @param to_bus the "to" bus.
--  @see slimta.bus.chain
function __call(self, from_bus, to_bus)

-- vim:filetype=lua:sw=4:ts=4:sts=4:et:
