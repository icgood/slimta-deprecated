
slimta.message.contents
=======================

.. module:: slimta.message.contents

Module used to parse, store, load, and stringify message contents in an easy,
sensible way. This includes header parsing and modification.

.. function:: copy(old)

   Copies :mod:`contents` object into a new object. This is a "deep" copy
   operation, tables are not recycled.

   :param old: the original :mod:`contents` object.
   :return: new :mod:`contents` object, identical to the original.

.. function:: new(raw_data)

   Creates a new message contents object from the given information. The headers
   are accessible from the resulting message object in the ``headers`` field.
   For example, to get the first ``From`` header, use
   ``contents.headers.from[1]``, which will return ``nil`` if no such header
   exists.

   :param raw_data: raw message contents string, such as that read from an SMTP
    stream or from a storage engine.
   :return: new :mod:`contents` object.

.. function:: add_header(self, name, value, [after_existing])

   Adds a new header to the message. This is the ONLY way to add new headers to
   a message, modifying the ``headers`` table will NOT work.

   :param self: :mod:`contents` object.
   :param name: the name of the header to add, e.g. ``"X-Awesome-Sauce"``.
   :param value: the raw contents of the header, e.g. ``"127.0.0.1"``.
   :param after_existing: if true, append the new header instead of prepending it
    to the list of headers.

.. function:: delete_header(self, name)

   Removes ALL headers of the given name from the message. This is the ONLY way to remove headers from a message, modifying the ``headers`` table will NOT work.

   :param self: :mod:`contents` object.
   :param name: the name of the header to delete, e.g. ``"X-Fail-Sauce"``.

.. function:: __tostring(self)

   Converts the :mod:`contents` object into a raw string, headers included.

   :param self: :mod:`contents` object.
   :return: the raw string representing the message contents.

.. function:: to_xml(self, attachments)

   Generates a table array of XML representing the :mod:`contents` object.

   :param self: :mod:`contents` object.
   :param attachments: table of attachments for raw message data.
   :return: a table array of XML lines, suitable for :mod:`slimta.xml.writer`.

.. function:: from_xml(tree_node, attachments)

   Loads a :mod:`contents` object from the given XML node tree, as generated by
   the :mod:`slimta.xml.reader` module.

   :param tree_node: node of the XML tree where the message contents starts.
   :param attachments: table of attachments with raw message data.
   :return: new :mod:`contents` object.

.. function:: to_meta(self, meta)

   Creates a simple key-value table describing all the information contained in
   the :mod:`contents` object, suitable for serialization or, more commonly,
   storage in a storage engine. Because message contents are stored separately
   from message meta information, this function is likely a no-op.

   :param self: :mod:`contents` object.
   :param meta: the table to add simple key-value meta information to.

.. function:: from_meta(meta, raw_contents)

   Loads a message contents object from the given simple table of meta
   information. Because message contents are stored separately from message meta
   information, this function does not actually use the meta table, it is only
   given for consistency.

   :param meta: simple key-value table of meta information to load from.
   :param raw_contents: raw message data string.
   :return: new :mod:`contents` object.

