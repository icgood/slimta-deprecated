
slimta.message.client
=====================

.. module:: slimta.message.client

Module for describing the client that delivered the :mod:`message` to the edge
listener. This information is useful for logging, policies, etc.

.. function:: copy(old)

   Copies a :mod:`client` object into a new object. This is a "deep" copy
   operation, tables are not recycled.

   :param old: the original :mod:`client` object.
   :return: a new :mod:`client` object, identical to the original.

.. function:: new(protocol, ehlo, ip, security, receiver, [auth_info])

   Creates a new :mod:`client` object from the given information.

   :param protocol: a string describing the protocol by which the message was
    delivered, e.g. ``"ESMTP"`` or ``"HTTP"``.
   :param ehlo: the string passed to the SMTP EHLO command (or equivalent).
   :param ip: the source of the connection, calling ``tostring()`` on this
    object will give its IP string.
   :param security: a string describing any security procedures used to deliver
    the message, e.g. ``"none"`` or ``"TLS"``.
   :param receiver: the hostname or other identification string of the edge
    listener that received the message.
   :param auth_info: the identity used for any authentication mechanism.
   :return: new :mod:`client` object.

.. function:: to_xml(self)

   Generates a table array of XML representing the :mod:`client` object.

   :param self: :mod:`client` object.
   :return: a table array of XML lines, suitable for :mod:`slimta.xml.writer`.

.. function:: from_xml(tree_node)

   Loads a :mod:`client` object from the given XML node tree, as generated by
   the :mod:`slimta.xml.reader` module.

   :param tree_node: node of the XML tree where the message client starts.
   :return: new :mod:`client` object.

.. function:: to_meta(self, meta)

   Creates a simple key-value table describing all the information contained in
   the message client object, suitable for serialization or, more commonly,
   storage in a storage engine.

   :param self: :mod:`client` object.
   :param meta: the table to add simple key-value meta information to.

.. function:: from_meta(meta)

   Loads a message client object from the given simple table of meta
   information.

   :param meta: simple key-value table of meta information to load from.
   :return: new :mod:`client` object.

