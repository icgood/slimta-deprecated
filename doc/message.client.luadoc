
--- Module for describing the client that delivered the message to the edge
--  listener. This information is useful for logging, policies, etc.
--  @see slimta.message
module "slimta.message.client"

--- Copies a message client object into a new object. This is a "deep" copy
--  operation, tables are not recycled.
--  @param old the original message client object.
--  @return a new message client object, identical to the original.
function slimta.message.client.copy(old)

--- Creates a new message client object from the given information.
--  @param protocol a string describing the protocol by which the message was
--                  delivered, e.g. "ESMTP" or "HTTP".
--  @param ehlo the string passed to the SMTP EHLO command (or equivalent).
--  @param ip the source of the connection, calling tostring() on this object
--            will give its IP string.
--  @param security a string describing any security procedures used to deliver
--                  the message, e.g. "none" or "TLS".
--  @param receiver the hostname or other identification string of the edge
--                  listener that received the message.
--  @param auth_info the identity used for any authenntication mechanism.
--  @return a new message client object.
function slimta.message.client.new(protocol, ehlo, ip, security, receiver, auth_info)

--- Generates a table array of XML representing the message client object. 
--  @param self the message client object.
--  @return a table array of XML lines.
--  @see slimta.xml.writer
function slimta.message.client.to_xml(self)

--- Loads a message client object from the given XML node tree, as generated by
--  the slimta.xml.reader module.
--  @param tree_node node of the XML tree where the message client starts.
--  @return a new message client object.
--  @see slimta.xml.reader
function slimta.message.client.from_xml(tree_node)

--- Creates a simple key-value table describing all the information contained
--  in the message client object, suitable for serialization or, more commonly,
--  storage in a storage engine.
--  @param self the message client object.
--  @param meta if given, keys are added to this table rather than a new one.
--  @return the simple table of meta information.
function slimta.message.client.to_meta(self, meta)

--- Loads a message client object from the given simple table of meta
--  information.
--  @param meta simple table of meta information to load from.
--  @return a new message client object.
function slimta.message.client.from_meta(meta)

-- vim:filetype=lua:sw=4:ts=4:sts=4:et:
